{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
		"filter": {
			"scope": "html, javascript",
			"prefix": "filter",
			"body": "words = words.filter((word) => {return $0});"
		},

		"sort" : {
			"scope" : "html, javascript",
			"prefix": "sort",
			"body": "arr = arr.sort((a, b) => {return a-b})"
		}
    "Document create element shorthand": {
        "scope": "html, javascript",
        "prefix": "@create",
        "body": "$0 = document.createElement('$0');"
    },
    "Document set Attribute shorthand": {
        "scope": "html, javascript",
        "prefix": "@set",
        "body": "document.setAttribute('$0', 'attribute')"
    },
    "Document query selector shorthand": {
        "scope": "html, javascript",
        "prefix": "@select",
        "body": "let $0 = document.querySelector('#$0');"
    },
    "HTML Name and Email id": {
        "scope": "html",
        "prefix": "owen-id-html",
        "body": [
            "<!--",
            "    Name:   Owen Goh Heng Yi",
            "    Email:  owen.goh.2022",
            "-->",
        ]
    },
    "CSS & JS Name and Email id": {
        "scope": "css, javascript",
        "prefix": "owen-id-js",
        "body": [
            "/*",
            "    Name:   Owen Goh Heng Yi",
            "    Email:  owen.goh.2022",
            "*/",
        ]
    },

	"Bootstrap CSS": {
        "scope": "html",
        "prefix": "lf-bs-cdn-css",
        "body": [
            "<!-- Bootstrap CSS -->",
            "<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"> ",
            ""
        ]
    },
    "Bootstrap JS bundle b4 </body>": {
        "scope": "html",
        "prefix": "lf-bs-cdn-js",
        "body": [
            "<!-- Bootstrap JS bundle to be placed before the closing </body> tag -->",
            "<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3/dist/js/bootstrap.bundle.min.js\" ></script> ",
            ""
        ]
    },
    "container-fluid": {
        "scope": "html",
        "prefix": "lf-bs-container",
        "body": [
            "<!-- None  <576px, sm  ≥576px, md  ≥768px, lg  ≥992px, xl  ≥1200px, xxl  ≥1400px -->",
            "<div class='container-fluid'>",
            "    <div class='row'>",
            "        <div class='col'>",
            "            $0",
            "        </div> <!-- col -->",
            "        <div class='col'>",
            "            ",
            "        </div> <!-- col -->",
            "        <div class='col'>",
            "            ",
            "        </div> <!-- col -->",
            "    </div> <!-- row -->",
            "</div> <!-- container -->",
            ""
        ]
    },
    "card": {
        "scope": "html",
        "prefix": "lf-bs-card",
        "body": [
            "",
            " <!-- BS card: Start --> ",
            " <div class=\"card\" style=\"width: 18rem;\"> ",
            "     <img src=\"$0...\" class=\"card-img-top\" alt=\"...\"> ",
            "     <div class=\"card-body\"> ",
            "         <h5 class=\"card-title\">Card title</h5> ",
            "         <p class=\"card-text\">Some quick example text to make up the bulk of the card's content.</p>  ",
            "     </div> ",
            "     <ul class=\"list-group list-group-flush\"> ",
            "         <li class=\"list-group-item\">An item</li> ",
            "         <li class=\"list-group-item\">A second item</li> ",
            "         <li class=\"list-group-item\">A third item</li> ",
            "     </ul> ",
            "     <div class=\"card-body\"> ",
            "         <a href=\"#\" class=\"card-link\">Card link</a> ",
            "         <a href=\"#\" class=\"card-link\">Another link</a> ",
            "     </div> ",
            " </div> ",
            " <!-- BS card: End --> ",
            ""
        ]
    },
    "carousel": {
        "scope": "html",
        "prefix": "lf-bs-carousel",
        "body": [
            "",
            " <!-- BS carousel: start --> ",
            " <div id=\"$0carouselExampleControls\" class=\"carousel slide\" data-bs-ride=\"carousel\"> ",
            "     <div class=\"carousel-inner\"> ",
            "         <div class=\"carousel-item active\"> ",
            "             <img src=\"...\" class=\"d-block w-100\" alt=\"...\"> ",
            "         </div> ",
            "         <div class=\"carousel-item\"> ",
            "             <img src=\"...\" class=\"d-block w-100\" alt=\"...\"> ",
            "         </div> ",
            "         <div class=\"carousel-item\"> ",
            "             <img src=\"...\" class=\"d-block w-100\" alt=\"...\"> ",
            "         </div> ",
            "     </div> ",
            "     <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleControls\" data-bs-slide=\"prev\"> ",
            "         <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span> ",
            "         <span class=\"visually-hidden\">Previous</span> ",
            "     </button> ",
            "     <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleControls\" data-bs-slide=\"next\">  ",
            "         <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span> ",
            "         <span class=\"visually-hidden\">Next</span> ",
            "     </button> ",
            " </div> ",
            " <!-- BS carousel: end --> ",
            ""
        ]
    },
    "nav": {
        "scope": "html",
        "prefix": "lf-bs-nav",
        "body": [
            " <!-- BS basic nav: start --> ",
            " <ul class=\"nav\"> ",
            "     <li class=\"nav-item\"> ",
            "         <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active</a> ",
            "     </li> ",
            "     <li class=\"nav-item\"> ",
            "         <a class=\"nav-link\" href=\"#\">Link</a> ",
            "     </li> ",
            "     <li class=\"nav-item\"> ",
            "         <a class=\"nav-link\" href=\"#\">Link</a> ",
            "     </li> ",
            "     <li class=\"nav-item\"> ",
            "         <a class=\"nav-link disabled\">Disabled</a> ",
            "     </li> ",
            " </ul> ",
            " <!-- BS basic nav: end --> ",
            ""
        ]
    },
    "navbar": {
        "scope": "html",
        "prefix": "lf-bs-navbar",
        "body": [
            " <!-- BS navbar: start --> ",
            " <nav class=\"navbar navbar-expand-lg bg-light\"> ",
            "     <div class=\"container-fluid\"> ",
            "       <a class=\"navbar-brand\" href=\"$0#\">Navbar</a> ",
            "       <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"> ",
            "         <span class=\"navbar-toggler-icon\"></span> ",
            "       </button> ",
            "       <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"> ",
            "         <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\"> ",
            "           <li class=\"nav-item\"> ",
            "             <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> ",
            "           </li> ",
            "           <li class=\"nav-item\"> ",
            "             <a class=\"nav-link\" href=\"#\">Link</a> ",
            "           </li> ",
            "           <li class=\"nav-item dropdown\"> ",
            "             <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> ",
            "               Dropdown ",
            "             </a> ",
            "             <ul class=\"dropdown-menu\"> ",
            "               <li><a class=\"dropdown-item\" href=\"#\">Action</a></li> ",
            "               <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li> ",
            "               <li><hr class=\"dropdown-divider\"></li> ",
            "               <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li> ",
            "             </ul> ",
            "           </li> ",
            "           <li class=\"nav-item\"> ",
            "             <a class=\"nav-link disabled\">Disabled</a> ",
            "           </li> ",
            "         </ul> ",
            "         <form class=\"d-flex\" role=\"search\"> ",
            "           <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"> ",
            "           <button class=\"btn btn-outline-success\" type=\"submit\">Search</button> ",
            "         </form> ",
            "       </div> ",
            "     </div> ",
            "   </nav> ",
            "   <!-- BS navbar: start --> ",
            ""
        ]
    },
    "table": {
        "scope": "html",
        "prefix": "lf-bs-table",
        "body": [
            " <!-- BS table: start --> ",
            " <table class=\"table table-primary table-striped table-responsive\"> ",
            "   <thead> ",
            "     <tr> ",
            "       <th scope=\"col\">$0</th> ",
            "       <th scope=\"col\"></th> ",
            "       <th scope=\"col\"></th> ",
            "     </tr> ",
            "   </thead> ",
            "   <tbody> ",
            "     <tr> ",
            "       <th scope=\"row\"></th> ",
            "       <td></td> ",
            "       <td></td> ",
            "     </tr> ",
            "     <tr> ",
            "       <th scope=\"row\"></th> ",
            "       <td></td> ",
            "       <td></td> ",
            "     </tr> ",
            "     <tr> ",
            "       <th scope=\"row\"></th> ",
            "       <td colspan=\"2\"></td> ",
            "     </tr> ",
            "   </tbody> ",
            " </table> ",
            " <!-- BS table: start --> ",
            ""
        ]
    },
    "input": {
        "scope": "html",
        "prefix": "lf-bs-input",
        "body": [
            " <div class=\"mb-3\"> ",
            "     <label for=\"exampleFormControlInput1\" class=\"form-label\">Email address</label> ",
            "     <input type=\"email\" class=\"form-control\" id=\"$0exampleFormControlInput1\" placeholder=\"name@example.com\"> ",
            " </div> ",
            ""
        ]
    },
    "input-group": {
        "scope": "html",
        "prefix": "lf-bs-input-group",
        "body": [
            " <div class=\"input-group mb-3\"> ",
            "     <span class=\"input-group-text\" id=\"basic-addon1\">@</span> ",
            "     <input type=\"text\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" ",
            "         aria-describedby=\"basic-addon1\"> ",
            " </div> ",
            ""
        ]
    },
    "input textarea": {
        "scope": "html",
        "prefix": "lf-bs-textarea",
        "body": [
            " <div class=\"mb-3\"> ",
            "     <label for=\"exampleFormControlTextarea1\" class=\"form-label\">Example textarea</label> ",
            "     <textarea class=\"form-control\" id=\"$0exampleFormControlTextarea1\" rows=\"3\"></textarea> ",
            " </div> ",
            ""
        ]
    },
    "input checkbox": {
        "scope": "html",
        "prefix": "lf-bs-checkbox",
        "body": [
            " <div class=\"form-check\"> ",
            "     <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"$0flexCheckDefault\"> ",
            "     <label class=\"form-check-label\" for=\"flexCheckDefault\"> ",
            "         Default checkbox ",
            "     </label> ",
            " </div> ",
            " <div class=\"form-check\"> ",
            "     <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckChecked\" checked> ",
            "     <label class=\"form-check-label\" for=\"flexCheckChecked\"> ",
            "         Checked checkbox ",
            "     </label> ",
            " </div> ",
            ""
        ]
    },
    "input radio": {
        "scope": "html",
        "prefix": "lf-bs-radio",
        "body": [
            " <div class=\"form-check\"> ",
            "     <input class=\"form-check-input\" type=\"radio\" name=\"$0flexRadioDefault\" id=\"flexRadioDefault1\"> ",
            "     <label class=\"form-check-label\" for=\"flexRadioDefault1\"> ",
            "         Default radio ",
            "     </label> ",
            " </div> ",
            " <div class=\"form-check\"> ",
            "     <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" checked> ",
            "     <label class=\"form-check-label\" for=\"flexRadioDefault2\"> ",
            "         Default checked radio ",
            "     </label> ",
            " </div> ",
            ""
        ]
    },
    "input select": {
        "scope": "html",
        "prefix": "lf-bs-select",
        "body": [
            " <select class=\"form-select\" aria-label=\"Default select example\"> ",
            "     <option selected>$0Open this select menu</option> ",
            "     <option value=\"1\">One</option> ",
            "     <option value=\"2\">Two</option> ",
            "     <option value=\"3\">Three</option> ",
            " </select> ",
            ""
        ]
    },
    "button": {
        "scope": "html",
        "prefix": "lf-bs-button",
        "body": [
            "<button type=\"button\" class=\"btn btn-primary\">$0Submit</button>"
        ]
    },
    "dropdown menu": {
        "scope": "html",
        "prefix": "lf-bs-dropdown-menu",
        "body": [
            " <!-- Example single danger button --> ",
            " <div class=\"btn-group\"> ",
            "   <button type=\"button\" class=\"btn btn-danger dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> ",
            "     $0Action ",
            "   </button> ",
            "   <ul class=\"dropdown-menu\"> ",
            "     <li><a class=\"dropdown-item\" href=\"#\">Action</a></li> ",
            "     <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li> ",
            "     <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li> ",
            "     <li><hr class=\"dropdown-divider\"></li> ",
            "     <li><a class=\"dropdown-item\" href=\"#\">Separated link</a></li> ",
            "   </ul> ",
            " </div> ",
            ""
        ]
    },
    "collapse": {
        "scope": "html",
        "prefix": "lf-bs-collapse",
        "body": [
            " <!-- BS collapse: start --> ",
            " <p> ",
            "     <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseExample\" ",
            "         aria-expanded=\"false\" aria-controls=\"collapseExample\"> ",
            "         Button with data-bs-target ",
            "     </button> ",
            " </p> ",
            " <div class=\"collapse\" id=\"collapseExample\"> ",
            "     <div class=\"card card-body\"> ",
            "         Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user ",
            "         activates the relevant trigger. ",
            "     </div> ",
            " </div> ",
            " <!-- BS collapse: start --> ",
            ""
        ]
    },
    // Axios
    "AXIOS Javascript": {
        "scope": "html",
        "prefix": "lf-axios-cdn",
        "body": [
            "<!-- Axios -->",
            "<script src='https://unpkg.com/axios/dist/axios.min.js'></script>",
            ""
        ]
    },
    "axios get url?k=v": {
        "scope": "javascript",
        "prefix": "lf-axios-get",
        "body": [
            "axios.get('$0')",
            "    .then(response => {",
            "        // console.log(response.data);",
            "    })",
            "    .catch( error => {",
            "        console.log(error.message);",
            "    });"
        ]
    },
    "axios get url params": {
        "scope": "javascript",
        "prefix": "lf-axios-get-params",
        "body": [
            "axios.get('$0', {",
            "    params: {",
            "        key: value",
            "    }",
            "})",
            "    .then(response => {",
            "        // console.log(response.data);",
            "    })",
            "    .catch( error => {",
            "        console.log(error.message);",
            "    });"
        ]
    },
    "axios post": {
        "scope": "javascript",
        "prefix": "lf-axios-post",
        "body": [
            "axios.post('$0', {",
            "    key:  value",
            "})",
            "    .then(response => {",
            "        // console.log(response.data);",
            "    })",
            "    .catch( error => {",
            "        console.log(error.message);",
            "    });"
        ]
    },
    "axios post form-urlencoded": {
        "scope": "javascript",
        "prefix": "lf-axios-post-form-urlencoded",
        "body": [
            "const params = new URLSearchParams();",
            "params.append('$0key', value);",
            "axios.post('url', params)",
            "    .then(response => {",
            "        // console.log(response.data);",
            "    })",
            "    .catch(error => {",
            "        console.log(error.message);",
            "    });"
        ]
    },
    "axios put": {
        "scope": "javascript",
        "prefix": "lf-axios-put",
        "body": [
            "axios.put('$0', {",
            "    key:  value",
            "})",
            "    .then(response => {",
            "        // console.log(response.data);",
            "    })",
            "    .catch( error => {",
            "        console.log(error.message);",
            "    });"
        ]
    },
    "axios delete": {
        "scope": "javascript",
        "prefix": "lf-axios-delete",
        "body": [
            "axios.delete('$0')",
            "    .then(response => {",
            "        // console.log(response.data);",
            "    })",
            "    .catch( error => {",
            "        console.log(error.message);",
            "    });"
        ]
    },
    "axios delete with data (NB: HTTP DELETE should not have request bodies)": {
        "scope": "javascript",
        "prefix": "lf-axios-delete-data",
        "body": [
            "axios.delete('$0', {",
            "    data: {",
            "        key:  value",
            "    }",
            "})",
            "    .then(response => {",
            "        // console.log(response.data);",
            "    })",
            "    .catch( error => {",
            "        console.log(error.message);",
            "    });"
        ]
    },
    // PHP implementation of JSON API
    "PHP implementation of JSON API": {
        "scope": "",
        "prefix": "lf-php-json-api",
        "body": [
            "// <?php",
            "header('Content-Type: application/json');",
            "header('Access-Control-Allow-Origin: *');",
            "",
            "// for HTTP POST with JSON data.",
            "\\$json_data = file_get_contents('php://input');",
            "",
            "\\$results = [",
            "    'POST' => \\$_POST,",
            "    'GET' => \\$_GET,",
            "    'REQUEST' => \\$_REQUEST,",
            "    'JSON' => \\$json_data,",
            "    'JSON_PARAM' => json_decode(\\$json_data)",
            "];",
            "",
            "echo json_encode(\\$results);"
        ]
    },
    // Vue.js
    "Vue.js": {
        "scope": "html",
        "prefix": "lf-vue-cdn",
        "body": [
            "<!-- Vue 3 -->",
            "<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>",
            ""
        ]
    },
    "Vue app": {
        "scope": "javascript",
        "prefix": "lf-vue-app",
        "body": [
            "// <div id='app'></div>",
            "const app = Vue.createApp({ ",
            "    data() { ",
            "        return { ",
            "            $0  // key: value",
            "        };",
            "    }, // data",
            "    // computed: { ",
            "    //     derivedProperty() {",
            "    //         return false;",
            "    //     }  ",
            "    // }, // computed",
            "    // created() { ",
            "    // },",
            "    // mounted() { ",
            "    // },",
            "    methods: {",
            "        methodName() {",
            "            ",
            "        }",
            "    } // methods",
            "});",
            "const vm = app.mount('#app'); "
        ]
    },
    "Vue component": {
        "scope": "javascript",
        "prefix": "lf-vue-component",
        "body": [
            "app.component('$0component-name', { ",
            "    props: [ 'prop1', 'prop2' ],",
            "    // props: {",
            "    //     prop1: String, ",
            "    //     prop2: Number, ",
            "    // }, // props",
            "    ",
            "    data() {",
            "        return {",
            "            // key: value",
            "        }",
            "    }, // data",
            "    ",
            "    methods: {",
            "        methodName() {",
            "            ",
            "        }",
            "    }, // methods",
            "    ",
            "    template: ``",
            "});",
            "// component must be declared before app.mount(...)"
        ]
    },
    "Vue component event": {
        "scope": "javascript",
        "prefix": "lf-vue-component-event",
        "body": [
            "app.component('$0component-name', { ",
            "    props: [ 'prop1', 'prop2' ],",
            "    // props: {",
            "    //     prop1: String, ",
            "    //     prop2: Number, ",
            "    // }, // props",
            "    ",
            "    emits: ['inFocus', 'submit'], // declare events that may be emitted",
            "    // emits: {",
            "    //     // No validation",
            "    //     click: null,",
            "    ",
            "    //     // Validate submit event",
            "    //     submit: (eventData ) => {",
            "    //         console.log('validate eventdata', eventData);",
            "    //     }",
            "    // },",
            "    ",
            "    data() {",
            "        return {",
            "            // key: value",
            "        }",
            "    }, // data",
            "    ",
            "    methods: {",
            "        methodName() {",
            "            this.\\$emit('submit', { key: 'value' }); // event data can be literal or object",
            "        }",
            "    }, // methods",
            "    ",
            "    template: ``",
            "});",
            "// component must be declared before app.mount(...)"
        ]
    },
    "WAD2 coding tips": {
        "scope": "html",
        "prefix": "lf-wad2",
        "body": [
            "<!--",
            "Code a bit, test a bit.",
            "",
            "Understand the errors by:",
            " * Check the browser console for error messages and try to fix the errors from top to bottom.",
            " * For CSS/Bootstrap, inspect to look at the box model and styles applied on the element.",
            " * Use the browser's debugging tools (https://developer.chrome.com/docs/devtools/javascript/) OR ",
            "      console.log( meaningful messages ) to trace through your code. ",
            "Then look at your code to fix the bugs.",
            "-->",
        ]
    }
}